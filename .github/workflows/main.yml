on: [push, pull_request]
name: CI
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  # XXX: Static analysis step is way too out of date.
  # static-analysis:
  #   name: Static Analysis
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: go vet
  #     continue-on-error: false
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: vet
  #   - name: staticcheck
  #     continue-on-error: false
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: staticcheck
  #   - name: gosec
  #     # Gives too many false positives.
  #     continue-on-error: true
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: sec
  #       flags: "-exclude=G104"
  #   - name: misspell
  #     continue-on-error: false
  #     run: |
  #       go get -u github.com/client9/misspell/cmd/misspell
  #       $(go env GOPATH)/bin/misspell -locale US *.md $(find . -name '*.go')
  build:
    name: Build the executable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.23.x
    - uses: actions/checkout@v3
    - name: Build
      run: |
        set -ex

        build () {
          GOARCH=$1 GOOS=$2 make eth2-monitor && install -v bin/eth2-monitor build/eth2-monitor-$1
        }

        mkdir -p build
        for arch in arm64 arm64; do
          for os in linux darwin freebsd windows; do
            build "$arch" "$os"
          done
        done

        ( cd build
          sha256sum * > sha256sums.txt
        )

    - name: Upload binaries
      uses: actions/upload-artifact@master
      with:
        name: Executables
        path: "build"
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          build/*
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  build-and-push-image:
    runs-on: ubuntu-latest
    # needs: [static-analysis, build]
    needs: [build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
